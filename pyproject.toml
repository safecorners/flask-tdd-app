[tool.poetry]
name = "flask-tdd-app"
version = "0.1.0"
description = "example flask app"
license = "MIT"
authors = ["safecorners <safeconers.mobile@gmail.com>"]
readme = "README.md"
packages = [{include = "application", from="src"}]

[tool.poetry.dependencies]
python = "^3.9"
flask = "^2.2.2"
sqlalchemy = "^2.0.3"
psycopg2-binary = "^2.9.5"
pydantic = "^1.10.4"
email-validator = "^1.3.1"
gunicorn = "^20.1.0"
flask-pydantic = "^0.11.0"
injector = "^0.20.1"
flask-injector = "^0.14.0"
redis = "^4.5.1"

[tool.poetry.group.test.dependencies]
pytest = "^7.2.1"
pytest-xdist = "^3.2.0"
pytest-cov = "^4.0.0"
hypothesis = "^6.68.1"
fakeredis = "^2.10.0"

[tool.poetry.group.dev.dependencies]
flake8 = "^6.0.0"
flake8-pyproject = "^1.2.2"
black = "^23.1.0"
isort = "^5.12.0"
mypy = "^1.0.0"
bandit = "^1.7.4"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
pythonpath = ["src"]

[tool.flake8]
max-line-length = 88
exclude = [".git", "__pycache__"]
count = true

[tool.black]
line-length = 88

[tool.mypy]
plugins = [
  "pydantic.mypy"
]
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
# init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.bandit]
exclude_dirs = ["tests"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
